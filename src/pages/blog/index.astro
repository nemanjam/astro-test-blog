---
import { getCollection } from 'astro:content';
import PostPreview from '../../components/PostPreview.astro';
import Tags from '../../components/Tags.astro';
const allBlogPosts = await getCollection('blog');
import Layout from '../../layouts/Layout.astro';
const tags = allBlogPosts
  .map(blog => blog.data.tags)
  .flat()
  .reduce<{ [key: string]: number }>(function (result, c) {
    var count = result[c] || 0;
    result[c] = count + 1;
    return result;
  }, {});
const postsWithFormattedDate = allBlogPosts
  .map(post => ({
    ...post,
    formattedDate: new Date(post.data.date).toLocaleDateString('en-BE', {
      day: 'numeric',
      month: 'short',
      year: 'numeric',
    }),
  }))
  .sort((a, b) => +new Date(b.data.date) - +new Date(a.data.date));
---

<Layout title="The Thomas Ledoux blog">
  <section>
    <h1 class="text-center text-2xl font-bold mb-6">Personal blog</h1>
    <Tags tags={tags} />
    <div
      class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6 items-center auto-rows-min mt-6"
    >
      {
        postsWithFormattedDate.map(async (post, i) => {
          const { remarkPluginFrontmatter } = await post.render();

          return (
            <PostPreview
              post={post}
              minutesRead={remarkPluginFrontmatter?.minutesRead}
              index={i}
            />
          );
        })
      }
    </div>
  </section>
</Layout>
