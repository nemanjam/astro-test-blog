---
let posts = await Astro.glob('./*.mdx');
import Layout from '../../layouts/Layout.astro';
const postsWithViewCounts = posts
  .map(post => ({
    ...post,
    formattedDate: new Date(post.frontmatter.date).toLocaleDateString(
      Astro.request.headers.get('Accept-Language')?.split(',')?.[0] ?? 'en-US'
    ),
  }))
  .sort(
    (a, b) => +new Date(b.frontmatter.date) - +new Date(a.frontmatter.date)
  );
---

<Layout title="The Thomas Ledoux blog">
  <section>
    <div class="flex flex-col items-center justify-center">
      <h1 class="text-center text-2xl font-bold mb-6">Personal blog</h1>
      <div class="flex flex-col gap-6 items-center">
        {
          postsWithViewCounts.map(post => (
            <a
              class="transform lg:text-center border-2 border-secondary rounded-xl transition-transform px-8 py-4 lg:hover:scale-[1.04]"
              href={post.url}
            >
              <article class="relative rounded-lg  sm:mx-0">
                <date class="text-sm">{post.formattedDate}</date>
                <div class="flex justify-between">
                  <div class="flex justify-between lg:items-center w-full flex-col gap-y-2">
                    <h2 class="text-xl font-medium transition-colors">
                      {post.frontmatter.title}
                    </h2>
                    <p>{post.frontmatter.minutesRead}ing time</p>
                    <ul class="flex flex-wrap lg:justify-center w-full">
                      {post.frontmatter.tags?.map((tag: string) => {
                        return (
                          <li class="bg-secondary text-white text-sm my-1 py-1 px-4 mr-2 rounded-md">
                            {tag}
                          </li>
                        );
                      })}
                    </ul>
                  </div>
                </div>
              </article>
            </a>
          ))
        }
      </div>
    </div>
  </section>
</Layout>
