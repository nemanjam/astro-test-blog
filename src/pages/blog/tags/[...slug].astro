---
export const prerender = true;
const { slug } = Astro.params;
import { getCollection } from 'astro:content';
import PostPreview from '../../../components/PostPreview.astro';
import Tags from '../../../components/Tags.astro';
const blogs = await getCollection('blog');
const tags = blogs
  .map(blog => blog.data.tags)
  .flat()
  .reduce<{ [key: string]: number }>(function (result, c) {
    var count = result[c] || 0;
    result[c] = count + 1;
    return result;
  }, {});
import Layout from '../../../layouts/Layout.astro';
export async function getStaticPaths() {
  const blogs = await getCollection('blog');
  return [...new Set(blogs.map(blog => blog.data.tags).flat())].map(tag => ({
    params: { slug: tag },
  }));
}
if (!slug) {
  return Astro.redirect('/404');
}
const allBlogPostsWithTag = await getCollection('blog', blog =>
  blog.data.tags.some(tag => tag === slug)
);
if (allBlogPostsWithTag.length === 0) {
  return Astro.redirect('/404');
}
const postsWithTag = allBlogPostsWithTag.map(post => ({
  ...post,
  formattedDate: new Date(post.data.date).toLocaleDateString('en-BE', {
    day: 'numeric',
    month: 'short',
    year: 'numeric',
  }),
}));
---

<Layout
  title={`The Thomas Ledoux blog | ${slug}`}
  description={`All blogs about ${slug}`}
>
  <section>
    <div class="flex flex-col items-center justify-center">
      <h1 class="text-center text-2xl font-bold mb-6">
        All blogs about {slug}
      </h1>
      <Tags tags={tags} slug={slug} />
      <div class="flex flex-col gap-6 items-center">
        {
          postsWithTag.map(async post => {
            const { remarkPluginFrontmatter } = await post.render();

            return (
              <PostPreview
                minutesRead={remarkPluginFrontmatter?.minutesRead}
                post={post}
              />
            );
          })
        }
        <a
          rel="prefetch"
          href="/blog"
          class="flex items-center gap-x-2 mb-4 decoration-4 decoration-solid underline-offset-[3px] decoration-secondary underline"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width={1.5}
            stroke="currentColor"
            class="w-6 h-6"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18"></path>
          </svg>
          Back to overview
        </a>
      </div>
    </div>
  </section>
</Layout>
